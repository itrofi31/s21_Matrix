#suite determinant_matrix


#test determinant_1
  const int size = 5;
  matrix_t m = {0};
  s21_create_matrix(size, size, &m);
  for (int i = 0; i < size; i++)
    for (int j = 0; j < size; j++) m.matrix[i][j] = j;
  double res = 0;
  int code = s21_determinant(&m, &res);
  ck_assert_double_eq_tol(res, 0, 1e-6);
  ck_assert_int_eq(code, 0);
  s21_remove_matrix(&m);

#test determinant_2
  const int size = 4;
  matrix_t m = {0};
  s21_create_matrix(size, size, &m);
  for (int i = 0; i < size; i++)
    for (int j = 0; j < size; j++) m.matrix[i][j] = j + i;
  double res = 0;
  int code = s21_determinant(&m, &res);
  ck_assert_double_eq_tol(res, 0, 1e-6);
  ck_assert_int_eq(code, 0);
  s21_remove_matrix(&m);

#test determinant_3
  const int size = 5;
  matrix_t m = {0};
  s21_create_matrix(size, size, &m);
  m.matrix[0][0] = 0;
  m.matrix[0][1] = 6;
  m.matrix[0][2] = -2;
  m.matrix[0][3] = -1;
  m.matrix[0][4] = 5;
  m.matrix[1][0] = 0;
  m.matrix[1][1] = 0;
  m.matrix[1][2] = 0;
  m.matrix[1][3] = -9;
  m.matrix[1][4] = -7;
  m.matrix[2][0] = 0;
  m.matrix[2][1] = 15;
  m.matrix[2][2] = 35;
  m.matrix[2][3] = 0;
  m.matrix[2][4] = 0;
  m.matrix[3][0] = 0;
  m.matrix[3][1] = -1;
  m.matrix[3][2] = -11;
  m.matrix[3][3] = -2;
  m.matrix[3][4] = 1;
  m.matrix[4][0] = -2;
  m.matrix[4][1] = -2;
  m.matrix[4][2] = 3;
  m.matrix[4][3] = 0;
  m.matrix[4][4] = -2;
  double res = 0;
  int code = s21_determinant(&m, &res);
  ck_assert_double_eq_tol(res, 2480, 1e-6);
  ck_assert_int_eq(code, 0);
  s21_remove_matrix(&m);

#test determinant_4
  const int size = 3;
  matrix_t m = {0};
  s21_create_matrix(size, size, &m);
  m.matrix[0][0] = 2;
  m.matrix[0][1] = 3;
  m.matrix[0][2] = 1;
  m.matrix[1][0] = 7;
  m.matrix[1][1] = 4;
  m.matrix[1][2] = 1;
  m.matrix[2][0] = 9;
  m.matrix[2][1] = -2;
  m.matrix[2][2] = 1;
  double res = 0;
  int code = s21_determinant(&m, &res);
  ck_assert_double_eq_tol(res, -32, 1e-6);
  ck_assert_int_eq(code, 0);
  s21_remove_matrix(&m);

#test determinant_5
  const int size = 2;
  matrix_t m = {0};
  s21_create_matrix(size, size, &m);
  m.matrix[0][0] = -5;
  m.matrix[0][1] = -4;
  m.matrix[1][0] = -2;
  m.matrix[1][1] = -3;
  double res = 0;
  int code = s21_determinant(&m, &res);
  ck_assert_double_eq_tol(res, 7, 1e-6);
  ck_assert_int_eq(code, 0);
  s21_remove_matrix(&m);

#test determinant_6
  matrix_t m = {0};
  m.matrix = NULL;
  double res = 0;
  ck_assert_int_eq(s21_determinant(&m, &res), 1);
  ck_assert_int_eq(s21_determinant(NULL, &res), 1);
  ck_assert_int_eq(s21_determinant(&m, NULL), 1);

#test determinant_7
  matrix_t m = {0};
  s21_create_matrix(1, 1, &m);
  m.matrix[0][0] = 25;
  double res = 0;
  int code = s21_determinant(&m, &res);
  ck_assert_double_eq_tol(res, 25, 1e-6);
  ck_assert_int_eq(code, 0);
  s21_remove_matrix(&m);