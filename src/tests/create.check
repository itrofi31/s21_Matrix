#suite create_matrix

#test create_1
const int rows = (int)rand() % 100 + 1;
const int cols = (int)rand() % 100 + 1;
matrix_t m = {0};
s21_create_matrix(rows, cols, &m);
for (int i = 0; i < rows; i++) {
  for (int j = 0; j < cols; j++) {
    m.matrix[i][j] = 0;
    ck_assert_ldouble_eq_tol(0, m.matrix[i][j], 1e-6);
  }
}
ck_assert_int_eq(m.rows, rows);
ck_assert_int_eq(m.columns, cols);
s21_remove_matrix(&m);


#test create_2
const int rows = 0;
const int cols = 10;
matrix_t m = {0};
ck_assert_int_eq(s21_create_matrix(rows, cols, &m), 1);
s21_remove_matrix(&m);


#test create_3
const int rows = 10;
const int cols = 0;
matrix_t m = {0};
ck_assert_int_eq(s21_create_matrix(rows, cols, &m), 1);
s21_remove_matrix(&m);
